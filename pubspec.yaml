name: car_tracking_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.1 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

  # =====================  Core Packages =====================

  # A Dart package that helps to implement value based
  # equality without needing to explicitly override == and hashCode.
  equatable: ^2.0.5

  # Flutter Widgets that make it easy to implement the BLoC (Business Logic Component) design pattern.
  # Built to be used with the bloc state management package.
  flutter_bloc: ^8.1.5

  # Simple direct Service Locator that allows to decouple the interface from a concrete implementation
  #and to access the concrete implementation from everywhere in your App"
  get_it: ^7.7.0

  # Injectable is a convenient code generator for get_it.
  injectable: ^2.4.1

  # A powerful Http client for Dart, which supports Interceptors,
  # FormData, Request Cancellation, File Downloading, Timeout etc.
  dio: ^5.4.3+1

  # A GraphQL client for Flutter, bringing all the features from a modern GraphQL client to one easy to use package.
  graphql_flutter: ^5.1.2


  # Flutter plugin for reading and writing simple key-value pairs.
  # Wraps NSUserDefaults on iOS and SharedPreferences on Android.
  shared_preferences: ^2.2.2
  # Flutter Secure Storage provides API to store data in secure storage.
  # Keychain is used in iOS, KeyStore based solution is used in Android.
  flutter_secure_storage: ^9.2.2


  # A wrapper around InheritedWidget to make them easier to use and more reusable.
  provider: ^6.1.2

  # Web Not Supported
  path_provider: ^2.1.3

  # Lightweight and blazing fast key-value database written in pure Dart.
  # Strongly encrypted using AES-256.
  hive: ^2.2.3
  # Extension for Hive. Makes it easier to use Hive in Flutter apps.
  hive_flutter: ^1.1.0

  # Classes and helper functions that support JSON code generation via the `json_serializable` package.
  json_annotation: ^4.9.0

  # Easily configure any flutter application with global variables using a `.env` file.
  flutter_dotenv: ^5.1.0

  # =====================  Useful Utils Packages =====================

  # Collections and utilities functions and classes related to collections.
  collection: ^1.18.0

  # Contains code to deal with internationalized/localized messages
  # date and number formatting and parsing, bi-directional text,
  # and other internationalization issues.
  intl: ^0.19.0

  # Flutter plugin for discovering the state of the network (WiFi & mobile/cellular) connectivity on Android and iOS.
  connectivity_plus: ^6.0.3

  # A Flutter package to check your internet connection with subsecond response times, even on mobile networks!
  internet_connection_checker_plus: ^2.5.0

  # Flutter plugin for querying information about the application package,
  # such as CFBundleVersion on iOS or versionCode on Android.
  package_info_plus: ^8.0.0

  # Permission plugin for Flutter.
  # This plugin provides a cross-platform (iOS, Android) API to request and check permissions.
  permission_handler: ^11.3.1

  # Flutter plugin providing detailed information about the device (make, model, etc.),
  # and Android or iOS version the app is running on.
  device_info_plus: ^10.1.0

  # Flutter plugin for launching a URL. Supports web, phone, SMS, and email schemes.
  url_launcher: ^6.3.0

  #Pretty Dio logger is a Dio interceptor that logs network calls in a pretty, easy to read format.
  pretty_dio_logger: ^1.3.1

  # Small, easy to use and extensible logger which prints beautiful logs.
  logger: ^2.3.0


  # Official Flutter Tracking SDK for Mixpanel Analytics developed
  # and maintained by Mixpanel, Inc.
  mixpanel_flutter: ^2.1.1


  # A cross platform plugin for displaying and scheduling local notifications
  # for Flutter applications with the ability to customise for each platform.
  flutter_local_notifications: ^17.1.0

  # Toast Library for Flutter, Easily create toast messages in single line of code
  fluttertoast: ^8.2.5

  # A highly customizable, powerful and easy-to-use alerting library for Flutter.
  flash: ^3.1.1

  # A Flutter Geocoding plugin which provides easy geocoding and reverse-geocoding features.
  geocoding: ^3.0.0

  # A collection of loading indicators animated with flutter. Heavily inspired by @tobiasahlin's SpinKit.
  flutter_spinkit: ^5.2.1

  # RFC4122 (v1, v4, v5, v6, v7, v8) UUID Generator and Parser for Dart
  uuid: ^4.4.2

  # =====================  UI Helper Packages =====================

  # Flutter library to load and cache network images.
  # Can also be used with placeholder and error widgets.
  cached_network_image: ^3.3.1

  # NumberPicker is a widget allowing user to choose numbers by scrolling spinners.
  numberpicker: ^2.1.2

  # This package helps you to achieve animated notch bottom navigation bar with any widget as children.
  animated_notch_bottom_bar: ^1.0.3

  # Flutter's core Dropdown Button widget with steady dropdown menu and many options you can customize to your needs.
  dropdown_button2: ^2.3.9


  # =====================  Animation Packages =====================

  # Easily add staggered animations to your ListView, GridView, Column and Row children as shown in Material Design guidelines
  flutter_staggered_animations: ^1.1.1

  # Beautiful animations inspired on Animate.css,
  # every animation is a widgets that contains default but customizable values that look attractive.
  animate_do: ^3.3.4

  lottie: ^3.1.2


  # =====================  Firebase Packages  =======================
  # Flutter plugin for Firebase Core, enabling connecting to multiple Firebase apps.
  firebase_core: ^3.2.0
  # Flutter plugin for Firebase Crashlytics. It reports uncaught errors to the Firebase console.
  firebase_crashlytics: ^4.0.0
  # Flutter plugin for Cloud Firestore, a cloud-hosted,
  # noSQL database with live synchronization and offline support on Android and iOS.
  cloud_firestore: ^5.0.0
  # Flutter plugin for Google Analytics for Firebase,
  # an app measurement solution that provides insight on app usage and user engagement on Android and iOS.
  firebase_analytics: ^11.0.0


  # =====================  Map Packages  =======================

  # Geolocation plugin for Flutter. This plugin provides a cross-platform (iOS, Android) API for generic location (GPS etc.) functions.
  geolocator: ^12.0.0

  # A Flutter plugin for integrating Google Maps in iOS and Android applications.
  google_maps_flutter: ^2.6.1

  # A flutter package to get polyline points by either passing the coordinates or google encoded polyline string
  flutter_polyline_points: ^2.1.0




dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  injectable_generator: ^2.6.1
  flutter_lints: ^4.0.0
  json_serializable: ^6.7.1
  hive_generator: ^2.0.1
  build_runner: ^2.4.11
  flutter_launcher_icons: ^0.13.1


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - assets/
    - assets/images/
    - assets/icons/
    - assets/animations/
    - assets/json/
    - .env
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_intl:
  main_local: en
  enabled: true
  class_name: Translations
  arb_dir: lib/core/managers/localization/res
  output_dir: lib/core/managers/localization/generated




flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/icons/app_icon_logo.jpg"
  min_sdk_android: 21 # android min sdk min:16, default 21
